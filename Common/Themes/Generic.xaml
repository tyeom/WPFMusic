<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:ct="clr-namespace:Common.Controls"
                    xmlns:converters="clr-namespace:Common.Converters">
    <!--Converters Start-->
    <BooleanToVisibilityConverter x:Key="BoolToVisConverter" />
    <converters:EnumToVisibilityConverter x:Key="EnumToVisibilityConverter" />
    <!--Converters End-->
    
    <Style TargetType="{x:Type ct:ImageButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ct:ImageButton}">
                    <Border x:Name="buttonBorder">
                        <Border.Effect>
                            <DropShadowEffect Opacity="0.0" />
                        </Border.Effect>
                        <Grid HorizontalAlignment="Center"
                              VerticalAlignment="Center">
                            <Image x:Name="img" Stretch="None" Source="{Binding NormalImage, RelativeSource={RelativeSource TemplatedParent}}" />
                            <ContentControl Content="{TemplateBinding Content}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="img" Property="Source">
                                <Setter.Value>
                                    <Binding Path="PressImage" RelativeSource="{RelativeSource TemplatedParent}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsDisable" Value="true">
                            <Setter TargetName="img" Property="Source">
                                <Setter.Value>
                                    <Binding Path="DisableImage" RelativeSource="{RelativeSource TemplatedParent}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="buttonBorder" Property="IsHitTestVisible" Value="False" />
                        </Trigger>
                        <Trigger Property="IsDisable" Value="false">
                            <Setter TargetName="buttonBorder" Property="IsHitTestVisible" Value="True" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ct:IconButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ct:IconButton}">
                    <Border x:Name="buttonBorder">
                        <Border.Effect>
                            <DropShadowEffect Opacity="0.0" />
                        </Border.Effect>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <Image x:Name="xIonImg"
                                   Grid.Column="0"
                                   Source="{Binding IconImage, RelativeSource={RelativeSource TemplatedParent}}"
                                   Stretch="None"
                                   Margin="0, 0, 10, 0" />

                            <TextBlock x:Name="xText"
                                       Grid.Column="1"
                                       VerticalAlignment="Center"
                                       Text="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="FontFamily" Value="/MainEntry;component/Fonts/#나눔스퀘어" />
                                        <Style.Triggers>
                                            <Trigger Property="FontWeight" Value="Bold">
                                                <Setter Property="FontFamily" Value="/MainEntry;component/Fonts/#나눔스퀘어 Bold" />
                                            </Trigger>
                                            <Trigger Property="FontWeight" Value="ExtraBold">
                                                <Setter Property="FontFamily" Value="/MainEntry;component/Fonts/#나눔스퀘어 ExtraBold" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TextBlock.FontWeight" Value="Bold">
                            <Setter TargetName="xText" Property="FontFamily" Value="/MainEntry;component/Fonts/#나눔스퀘어 Bold" />
                        </Trigger>
                        <Trigger Property="TextBlock.FontWeight" Value="ExtraBold">
                            <Setter TargetName="xText" Property="FontFamily" Value="/MainEntry;component/Fonts/#나눔스퀘어 ExtraBold" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ct:EllipseButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ct:EllipseButton}">
                    <Border x:Name="buttonBorder">
                        <Border.Effect>
                            <DropShadowEffect Opacity="0.0" />
                        </Border.Effect>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <Ellipse x:Name="xEllipse"
                                     Grid.Row="0"
                                     Fill="{Binding Path=NormalBackground, RelativeSource={RelativeSource TemplatedParent}}"
                                     Visibility="{Binding IsEllipseVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisConverter}}"
                                     Margin="0, 0, 0, 0" />

                            <ContentPresenter Grid.Row="0" />

                            <TextBlock x:Name="xDescript"
                                       Grid.Row="1"
                                       HorizontalAlignment="Center"
                                       Text="{Binding Path=Descript, RelativeSource={RelativeSource TemplatedParent}}"
                                       Visibility="{Binding IsDescriptVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisConverter}}"
                                       Margin="0, 0, 0, 0" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ct:AlbumArtworkPanelConstrol}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ct:AlbumArtworkPanelConstrol}">
                    <Image Name="xAlbumArtImage"
                           Source="{Binding AlbumArtImage, RelativeSource={RelativeSource TemplatedParent}}"
                           Stretch="Fill"
                           StretchDirection="Both"
                           RenderOptions.BitmapScalingMode="HighQuality"
                           HorizontalAlignment="Right"
                           Margin="0, 0, 0, 0" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- SpectrumAnalyzer Control -->
    <LinearGradientBrush x:Key="SpectrumBarBrush"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
        <GradientStop Color="#06799F"
                      Offset="0" />
        <GradientStop Color="#024E68"
                      Offset="1" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="SpectrumPeakBrush"
                     Color="#61B4CF" />

    <Style TargetType="{x:Type ct:SpectrumAnalyzerControl}">
        <Setter Property="BarCount"
                Value="32" />
        <Setter Property="BarSpacing"
                Value="5" />
        <Setter Property="BarStyle">
            <Setter.Value>
                <Style TargetType="{x:Type Rectangle}">
                    <Setter Property="Fill"
                            Value="{StaticResource SpectrumBarBrush}" />
                    <Setter Property="RadiusX"
                            Value="3" />
                    <Setter Property="RadiusY"
                            Value="3" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="PeakStyle">
            <Setter.Value>
                <Style TargetType="{x:Type Rectangle}">
                    <Setter Property="Fill"
                            Value="{StaticResource SpectrumPeakBrush}" />
                    <Setter Property="RadiusX"
                            Value="3" />
                    <Setter Property="RadiusY"
                            Value="3" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ct:SpectrumAnalyzerControl}">
                    <Canvas Name="PART_SpectrumCanvas"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            ClipToBounds="True" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- EndRegion: SpectrumAnalyzer -->

    <Style TargetType="{x:Type ct:PlayListControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ct:PlayListControl}">
                    <Grid Background="Transparent"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch">
                        <ItemsPresenter />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ct:PlayListItemControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ct:PlayListItemControl}">
                    <Grid x:Name="xPlayInfoItemGrid"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Center"
                          Margin="10, 10, 10, 0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <CheckBox Grid.Column="0"
                                  Width="20"
                                  Height="20"
                                  IsChecked="{Binding IsChecked}"
                                  VerticalAlignment="Center"
                                  VerticalContentAlignment="Center"
                                  Cursor="Hand"
                                  Margin="0, 0, 0, 5"
                                  Style="{DynamicResource sNormalCheckBox}"/>

                        <Grid x:Name="PART_PlayInfo"
                              Grid.Column="1"
                              Background="Transparent"
                              VerticalAlignment="Center"
                              Margin="0, 0, 0, 5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Border Grid.Column="0"
                                    Width="25"
                                    Height="25"
                                    VerticalAlignment="Center"
                                    Margin="10, 0, 0, 0"
                                    >
                                <Path Fill="#FFFFFFFF"
                                      Visibility="{Binding IsPlaying, Converter={StaticResource BoolToVisConverter}}"
                                      Data="M10,16.5V7.5L16,12M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z"/>
                            </Border>
                            <TextBlock Grid.Column="1"
                                       Text="{Binding TitleText}"
                                       FontSize="13"
                                       Foreground="#FFFFFFFF"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Center"
                                       Margin="10, 0, 0, 0"
                                       Style="{DynamicResource xNanumSquareFont}"/>
                            <TextBlock Grid.Column="2"
                                       Text="{Binding ArtistText}"
                                       FontSize="13"
                                       Foreground="#FFFFFFFF"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Center"
                                       Margin="0, 0, 30, 0"
                                       Style="{DynamicResource xNanumSquareFont}"/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>