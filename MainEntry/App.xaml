<Application x:Class="MainEntry.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:MainEntry"
             xmlns:converters="clr-namespace:Common.Converters;assembly=Common"
             xmlns:system="clr-namespace:System;assembly=mscorlib">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/MainEntry;component/Mappings.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <system:Boolean x:Key="True">True</system:Boolean>
            <system:Boolean x:Key="False">False</system:Boolean>

            <system:Int16 x:Key="int0">0</system:Int16>
            <system:Int16 x:Key="int1">1</system:Int16>
            <system:Int16 x:Key="int2">2</system:Int16>
            <system:Int16 x:Key="int3">3</system:Int16>
            <system:Int16 x:Key="int4">4</system:Int16>
            <system:Int16 x:Key="int5">5</system:Int16>
            <system:Int16 x:Key="int6">6</system:Int16>
            <system:Int16 x:Key="int7">7</system:Int16>
            <system:Int16 x:Key="int8">8</system:Int16>
            <system:Int16 x:Key="int9">9</system:Int16>
            <system:Int16 x:Key="int10">10</system:Int16>
            <system:Int16 x:Key="int11">11</system:Int16>
            <system:Int16 x:Key="int12">12</system:Int16>
            <system:Int16 x:Key="int13">13</system:Int16>
            <system:Int16 x:Key="int14">14</system:Int16>
            <system:Int16 x:Key="int15">15</system:Int16>
            <system:Int16 x:Key="int16">16</system:Int16>
            <system:Int16 x:Key="int17">17</system:Int16>

            <!--Converters Start-->
            <BooleanToVisibilityConverter x:Key="BoolToVisConverter" />
            <converters:EnumToVisibilityConverter x:Key="EnumToVisibilityConverter" />
            <converters:EnumToBooleanConverter x:Key="EnumToBooleanConverter" />
            <converters:BoolReverseToVisConverter x:Key="BoolReverseToVisConverter" />
            <converters:MultiParamConverter x:Key="MultiParamConverter" />
            <converters:EqualOrGreaterThanConverter x:Key="EqualOrGreaterThanConverter" />
            <converters:EqualOrSmallerThanConverter x:Key="EqualOrSmallerThanConverter" />
            <converters:Base64ToBitmapImageConverter x:Key="Base64ToBitmapImageConverter"/>
            <converters:DoubleConverter x:Key="DoubleConverter"/>
            <!--Converters End-->

            <!--Visual-->
            <Style x:Key="ButtonFocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ComboBoxFocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle Margin="4,4,21,4" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--Visual END-->

            <!--Brush-->
            <LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
                <GradientStop Color="#F3F3F3" Offset="0" />
                <GradientStop Color="#EBEBEB" Offset="0.5" />
                <GradientStop Color="#DDDDDD" Offset="0.5" />
                <GradientStop Color="#CDCDCD" Offset="1" />
            </LinearGradientBrush>

            <SolidColorBrush x:Key="MusucAlbumCoverAvgColor" Color="#FF455668"/>

            <SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070" />

            <LinearGradientBrush x:Key="MenuPopupBrush"
                     EndPoint="0.5,1"
                     StartPoint="0.5,0">
                <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="0" />
                <GradientStop Color="{DynamicResource ControlMediumColor}"
                Offset="0.5" />
                <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="1" />
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill"
                     StartPoint="0,0"
                     EndPoint="1,0">
                <LinearGradientBrush.GradientStops>
                    <GradientStopCollection>
                        <GradientStop Color="#000000FF"
                    Offset="0" />
                        <GradientStop Color="#600000FF"
                    Offset="0.4" />
                        <GradientStop Color="#600000FF"
                    Offset="0.6" />
                        <GradientStop Color="#000000FF"
                    Offset="1" />
                    </GradientStopCollection>
                </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>
            <!--Brush END-->

            <!--Control colors-->
            <Color x:Key="WindowColor">#FFE8EDF9</Color>
            <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
            <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

            <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
            <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
            <Color x:Key="DisabledForegroundColor">#FF888888</Color>

            <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
            <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

            <Color x:Key="ControlLightColor">White</Color>
            <Color x:Key="ControlMediumColor">#FF7381F9</Color>
            <Color x:Key="ControlDarkColor">#FF211AA9</Color>

            <Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
            <Color x:Key="ControlPressedColor">#FF211AA9</Color>


            <Color x:Key="GlyphColor">#FF444444</Color>
            <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

            <!--Border colors-->
            <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
            <Color x:Key="BorderMediumColor">#FF888888</Color>
            <Color x:Key="BorderDarkColor">#FF444444</Color>

            <Color x:Key="PressedBorderLightColor">#FF888888</Color>
            <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

            <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
            <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

            <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

            <!--Control-specific resources.-->
            <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
            <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
            <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

            <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>
            <!--Control colors END-->

            <!--Scrollbar Style-->
            <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Grid x:Name="Grid">
                                <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="Transparent" />
                                <Border x:Name="Rectangle1" CornerRadius="5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Background="{TemplateBinding Background}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Tag" Value="Horizontal">
                                    <Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
                                    <Setter TargetName="Rectangle1" Property="Height" Value="7" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--ScrollBars-->
            <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
                <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
                <Setter Property="Foreground" Value="#8C8C8C" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Width" Value="8" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="GridRoot" Width="8" Background="{TemplateBinding Background}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="0.00001*" />
                                </Grid.RowDefinitions>
                                <Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="false">
                                    <Track.Thumb>
                                        <Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}" Style="{DynamicResource ScrollThumbs}" />
                                    </Track.Thumb>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="false" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="false" />
                                    </Track.DecreaseRepeatButton>
                                </Track>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                                    <Setter Value="{DynamicResource ButtonSelectBrush}" TargetName="Thumb" Property="Background" />
                                </Trigger>
                                <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                                    <Setter Value="{DynamicResource DarkBrush}" TargetName="Thumb" Property="Background" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="Orientation" Value="Horizontal">
                                    <Setter TargetName="GridRoot" Property="LayoutTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="-90" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="PART_Track" Property="LayoutTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="-90" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Width" Value="Auto" />
                                    <Setter Property="Height" Value="8" />
                                    <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                                    <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                                    <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--Scrollbar Style END-->

            <!--Button Style-->
            <Style x:Key="NormalButtonStyle" TargetType="Button">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid Background="{TemplateBinding Background}">
                                <ContentPresenter />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="BorderNormalButtonStyle" TargetType="Button">
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid x:Name="xBtnGrid"
                                  Background="{TemplateBinding Background}">
                                <Border BorderBrush="#FF999999"
                                        BorderThickness="1"
                                        CornerRadius="2"/>
                                <ContentPresenter VerticalAlignment="Center" />
                            </Grid>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="xBtnGrid"
                                            Property="Background"
                                            Value="#FFF8F8F8" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="sPlatButtonStyle" TargetType="Button">
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Name="border" BorderThickness="0" BorderBrush="Black" Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="sPlatToggleButtonStyle" TargetType="ToggleButton">
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Border Name="border" BorderThickness="0" BorderBrush="Black" Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="sYellowButtonStyle" TargetType="Button">
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Name="xBorder"
                                    BorderThickness="0"
                                    BorderBrush="Transparent">
                                <ContentPresenter HorizontalAlignment="Center"
                                                  VerticalAlignment="Center" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="xBorder"
                                            Property="Background"
                                            Value="#FFF2F2F2"/>
                                    <Setter TargetName="xBorder"
                                            Property="TextBlock.Foreground"
                                            Value="#FFB3B3B3"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="True">
                                    <Setter TargetName="xBorder"
                                            Property="Background"
                                            Value="#FFFEE500"/>
                                    <Setter TargetName="xBorder"
                                            Property="TextBlock.Foreground"
                                            Value="#FF000000"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="xBorder"
                                            Property="Background"
                                            Value="#FFFADA0A"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="sYellowBorderButtonStyle" TargetType="Button">
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Name="xBorder"
                                    BorderThickness="1"
                                    CornerRadius="2">
                                <ContentPresenter HorizontalAlignment="Center"
                                                  VerticalAlignment="Center" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="xBorder"
                                            Property="Background"
                                            Value="#FFF0F0F0"/>
                                    <Setter TargetName="xBorder"
                                            Property="BorderBrush"
                                            Value="#FFDADADA"/>
                                    <Setter TargetName="xBorder"
                                            Property="TextBlock.Foreground"
                                            Value="#FFB3B3B3"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="True">
                                    <Setter TargetName="xBorder"
                                            Property="Background"
                                            Value="#FFFEE500"/>
                                    <Setter TargetName="xBorder"
                                            Property="BorderBrush"
                                            Value="#FFE0CC1B"/>
                                    <Setter TargetName="xBorder"
                                            Property="TextBlock.Foreground"
                                            Value="#FF000000"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="xBorder"
                                            Property="Background"
                                            Value="#FFFADA0A"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--Button Style END-->

            <!--TextBlock Font Style-->
            <Style x:Key="xNanumSquareFont" TargetType="{x:Type TextBlock}">
                <Setter Property="TextTrimming" Value="None" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="FontFamily" Value="/MainEntry;component/Fonts/#나눔스퀘어" />
            </Style>
            <Style x:Key="xNanumSquare_BFont" TargetType="{x:Type TextBlock}">
                <Setter Property="TextTrimming" Value="None" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="FontFamily" Value="/MainEntry;component/Fonts/#나눔스퀘어 Bold" />
            </Style>
            <Style x:Key="xNanumSquare_EBFont" TargetType="{x:Type TextBlock}">
                <Setter Property="TextTrimming" Value="None" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="FontWeight" Value="ExtraBold" />
                <Setter Property="FontFamily" Value="/MainEntry;component/Fonts/#나눔스퀘어 ExtraBold" />
            </Style>
            <!--TextBlock Font Style END-->

            <!--TextBox Style-->
            <Style x:Key="sPlatTextBox" BasedOn="{x:Null}" TargetType="{x:Type TextBox}">
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBoxBase}">
                            <Border>
                                <ScrollViewer Margin="0" x:Name="PART_ContentHost" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="FocusVisualStyle">
                    <Setter.Value>
                        <Style>
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <ContentPresenter/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="sPlatUnderLineTextBox" BasedOn="{x:Null}" TargetType="{x:Type TextBox}">
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBoxBase}">
                            <Border BorderBrush="#FFA5A3A3" BorderThickness="0, 0, 0, 1">
                                <ScrollViewer Margin="0" x:Name="PART_ContentHost" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--TextBox Style END-->

            <!--PasswordBox Font Style-->
            <Style x:Key="sPlatPasswordBox" BasedOn="{x:Null}" TargetType="{x:Type PasswordBox}">
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type PasswordBox}">
                            <Border>
                                <ScrollViewer Margin="0" x:Name="PART_ContentHost" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--TextBox Font Style END-->

            <!--EllipseCheckBox Style-->
            <Style x:Key="sEllipseCheckBox" TargetType="CheckBox">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="CheckBox">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <Ellipse x:Name="xEllipse"
                                         Grid.Column="0"
                                         Width="22"
                                         Height="22"
                                         VerticalAlignment="Center"
                                         Fill="#FFFFFFFF"
                                         StrokeThickness="0.1"
                                         Stroke="#FF404040"
                                         Margin="0, 0, 0, 0" />
                                <Image x:Name="xCheckMarkImg"
                                       Grid.Column="0"
                                       Visibility="Collapsed"
                                       Width="22"
                                       Height="22"
                                       Stretch="Uniform"
                                       VerticalAlignment="Center"
                                       Source="/Views;component/Images/yellow_checkmark.png"/>

                                <ContentPresenter Grid.Column="1"
                                                  VerticalAlignment="Center"
                                                  Margin="5, 0, 0, 0"/>
                            </Grid>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="xEllipse"
                                            Property="Stroke"
                                            Value="#FF383838"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="xEllipse"
                                            Property="Stroke"
                                            Value="Transparent"/>
                                    <Setter TargetName="xCheckMarkImg"
                                            Property="Visibility"
                                            Value="Visible"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--EllipseCheckBox Style END-->

            <!--CheckBox Style-->
            <Style x:Key="sNormalCheckBox" TargetType="CheckBox">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="CheckBox">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <Rectangle x:Name="xRectangle"
                                           Grid.Column="0"
                                           Width="{TemplateBinding Width}"
                                           Height="{TemplateBinding Height}"
                                           VerticalAlignment="Center"
                                           Fill="Transparent"
                                           StrokeThickness="1"
                                           Stroke="#FFFFFFFF"
                                           Margin="0, 0, 0, 0" />
                                <Border x:Name="xCheckMarkBorder"
                                        Grid.Column="0"
                                        Visibility="Collapsed"
                                        Width="{TemplateBinding Width}"
                                        Height="{TemplateBinding Height}"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Padding="0, 0, 3, 0"
                                        Margin="0, 0, 0, 0">
                                    <Path Fill="#FFFFFFFF" Data="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z" Margin="0, -2, 0, 0" />
                                </Border>

                                <ContentPresenter Grid.Column="1"
                                                  VerticalAlignment="Center"
                                                  Margin="0, 0, 0, 0"/>
                            </Grid>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="xCheckMarkBorder"
                                            Property="Visibility"
                                            Value="Visible"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--CheckBox Style END-->

            <!--ComboBox ToggleButton-->
            <Style x:Key="sToggleButton_ComboBox" TargetType="{x:Type ToggleButton}">
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Focusable" Value="false" />
                <Setter Property="ClickMode" Value="Press" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Grid Margin="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Border x:Name="BG" BorderBrush="#FFE8E8E8" Background="#FFFFFFFF" CornerRadius="4" BorderThickness="0" HorizontalAlignment="Stretch" Grid.ColumnSpan="2" />
                                <Border x:Name="border" Grid.Column="1" Grid.ColumnSpan="1" BorderThickness="0" VerticalAlignment="Center" Margin="90, 0, 20, 5">
                                    <Image x:Name="xArrowImg" Source="/Views;component/Images/input-arrow-closed@3x.png" Width="18" Height="18" />
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <!--
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Fill" TargetName="path" Value="#FFFF8A00" />
                                    <Setter Property="BorderBrush" TargetName="BG" Value="#FFFF8A00" />
                                </Trigger>
                                -->
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter Property="Source" TargetName="xArrowImg" Value="/Views;component/Images/input-arrow-open@3x.png" />
                                    <!--
                                    <Setter Property="Background" TargetName="border">
                                        <Setter.Value>
                                            <SolidColorBrush Color="#FFE8E8E8" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="BorderBrush" TargetName="BG" Value="#FFE8E8E8" />
                                    -->
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="border">
                                        <Setter.Value>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="#FFDEDEDE" Offset="0.04" />
                                                <GradientStop Color="LightGray" Offset="1" />
                                                <GradientStop Color="#FFDEDEDE" Offset="0.045" />
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="BG" Property="Background" Value="#FFF8F8F8" />
                                    <Setter TargetName="BG" Property="BorderBrush" Value="#FFEBEBEB" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="SnapsToDevicePixels" Value="True" />
            </Style>
            <!--ComboBox ToggleButton END-->

            <Style x:Key="sComboBox_Basic" TargetType="{x:Type ComboBox}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource ComboBoxFocusVisual}" />
                <Setter Property="ItemContainerStyle" Value="{DynamicResource sComboBoxItem}" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Foreground" Value="#FF000000" />
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
                <Setter Property="ScrollViewer.PanningMode" Value="Both" />
                <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
                                <!--콤보박스 Open시 Popup Content Style-->
                                <Popup x:Name="PART_Popup" AllowsTransparency="true" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                    <Grid x:Name="xGrid" Background="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=MainGrid}">
                                        <Border x:Name="DropDownBorder" BorderBrush="#FF000000" BorderThickness="1" Background="#FFFFFFFF" CornerRadius="2" Margin="0, 5, 0, 0">
                                            <ScrollViewer x:Name="DropDownScrollViewer" TextOptions.TextFormattingMode="Display" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" Margin="0">
                                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                                    <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                        <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}" RadiusX="5" RadiusY="5" />
                                                    </Canvas>
                                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="0, 0, 0, 0" />
                                                </Grid>
                                            </ScrollViewer>
                                        </Border>
                                    </Grid>
                                </Popup>

                                <!--콤보박스 토글 버튼 Style-->
                                <ToggleButton x:Name="toggleButton" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource sToggleButton_ComboBox}" Margin="0, 0, 0, 0" TabIndex="20" IsTabStop="True" />

                                <!--콤보박스 Close시 Content Style-->
                                <ContentControl x:Name="contentControl" Margin="4,0" VerticalAlignment="Center" TextOptions.TextFormattingMode="Display" IsTabStop="False" TabIndex="10">
                                    <Grid>
                                        <Border x:Name="xCloseContentBorder"
                                                BorderBrush="#FFC3C3C3"
                                                BorderThickness="1"
                                                Height="30"
                                                VerticalAlignment="Center">
                                            <ContentPresenter ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="7, 0, 0, 0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                        </Border>
                                    </Grid>
                                </ContentControl>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasItems" Value="false">
                                    <Setter Property="Height" TargetName="DropDownBorder" Value="95" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" TargetName="contentControl" Value="#FFBABABA" />
                                </Trigger>
                                <Trigger Property="IsGrouping" Value="true">
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                                </Trigger>
                                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="SnapsToDevicePixels" Value="True" />
            </Style>
            <!--ComboBox Style END-->

            <!--ComboBoxItem Style-->
            <Style x:Key="sComboBoxItem" TargetType="{x:Type ComboBoxItem}">
                <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                <Setter Property="Padding" Value="5, 5, 5, 5" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                            <Border x:Name="Bd" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsHighlighted" Value="true">
                                    <Setter Property="Foreground" Value="#FF000000" />
                                    <Setter TargetName="Bd" Property="Background" Value="#FFEBEBEB"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="LightGray" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--ComboBoxItem Style END-->

            <!--Slider Style-->
            <Style x:Key="SliderDecreaseLargeKey" TargetType="{x:Type RepeatButton}">
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Focusable" Value="false" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Rectangle x:Name="xSliderRectangle" Height="1" Fill="#FF2194BA" />

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="xSliderRectangle"
                                            Property="Fill"
                                            Value="#FF707D8C" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="SliderIncreaseLargeKey" TargetType="{x:Type RepeatButton}">
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Focusable" Value="false" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Rectangle x:Name="xSliderRectangle" Height="1" Fill="Transparent" />

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="xSliderRectangle"
                                            Property="Fill"
                                            Value="#FF707D8C" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="HorizontalSliderThumbStyleKey" TargetType="{x:Type Thumb}">
                <Setter Property="Width" Value="8" />
                <Setter Property="Height" Value="8" />
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="Focusable" Value="false" />
                <Setter Property="Foreground" Value="Gray" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Ellipse StrokeThickness="0.8" Stroke="#FFD8D8D8" Fill="#FFFFFFFF" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="HorizontalSliderThumbSmallStyleKey" TargetType="{x:Type Thumb}">
                <Setter Property="Width" Value="5" />
                <Setter Property="Height" Value="5" />
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="Focusable" Value="false" />
                <Setter Property="Foreground" Value="Gray" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Ellipse StrokeThickness="0.8" Stroke="Transparent" Fill="Transparent" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="sRepeatSlider" TargetType="{x:Type Slider}">
                <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="#FFD8D8D8" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Slider}">
                            <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition MinHeight="{TemplateBinding MinHeight}" Height="Auto" />
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <TickBar Grid.Row="0" Height="4" Fill="{TemplateBinding Foreground}" Placement="Top" Visibility="Collapsed" />
                                    <TickBar Grid.Row="2" Height="4" Fill="{TemplateBinding Foreground}" Placement="Bottom" Visibility="Collapsed" />
                                    <Border Grid.Row="1" Margin="5,0" Height="2" CornerRadius="1" VerticalAlignment="center">
                                        <Grid>
                                            <Border CornerRadius="0.5" Background="#FFC9C9C9" Opacity="0.215" />
                                            <Border Margin="0 0 0.3 0.3" CornerRadius="0.5" Background="#FFBDBDBD" Opacity="0.715" />
                                        </Grid>
                                    </Border>
                                    <Track Name="PART_Track" Grid.Row="1">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Style="{StaticResource SliderDecreaseLargeKey}" Command="{x:Static Slider.DecreaseLarge}" />
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Style="{StaticResource SliderIncreaseLargeKey}" Command="{x:Static Slider.IncreaseLarge}" />
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb Style="{StaticResource HorizontalSliderThumbStyleKey}" />
                                        </Track.Thumb>
                                    </Track>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Opacity" Value="0.5" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="sSmallRepeatSlider" TargetType="{x:Type Slider}">
                <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="#FFD8D8D8" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Slider}">
                            <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition MinHeight="{TemplateBinding MinHeight}" Height="Auto" />
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <TickBar Grid.Row="0" Height="4" Fill="{TemplateBinding Foreground}" Placement="Top" Visibility="Collapsed" />
                                    <TickBar Grid.Row="2" Height="4" Fill="{TemplateBinding Foreground}" Placement="Bottom" Visibility="Collapsed" />
                                    <Border Grid.Row="1" Margin="5,0" Height="2" CornerRadius="1" VerticalAlignment="center">
                                        <Grid>
                                            <Border CornerRadius="0.5" Background="#FFC9C9C9" Opacity="0.215" />
                                            <Border Margin="0 0 0.3 0.3" CornerRadius="0.5" Background="#FFBDBDBD" Opacity="0.715" />
                                        </Grid>
                                    </Border>
                                    <Track Name="PART_Track" Grid.Row="1">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Style="{StaticResource SliderDecreaseLargeKey}" Command="{x:Static Slider.DecreaseLarge}" />
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Style="{StaticResource SliderIncreaseLargeKey}" Command="{x:Static Slider.IncreaseLarge}" />
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb Style="{StaticResource HorizontalSliderThumbSmallStyleKey}" />
                                        </Track.Thumb>
                                    </Track>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Opacity" Value="0.5" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--Slider Style END-->

        </ResourceDictionary>
    </Application.Resources>
</Application>
